rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Match users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Match skimmers collection and subcollections
    match /skimmers/{skimmerId} {
      allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
      allow write: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
      
      // Allow access to alerts subcollection
      match /alerts/{alertId} {
        allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
        allow write: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
      }
      
      // Allow access to cleaningSessions subcollection
      match /cleaningSessions/{sessionId} {
        allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
        allow write: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/connectedDevices[skimmerId]);
      }
    }
  }
}
